trigger:
  branches:
    include:
    - develop
    - release-*
    - hotfix-*
  tags:
    include:
    - '*'

stages:
- stage: test
  displayName: 'Build & Test'
  jobs:
  - job: macos
    strategy:
      matrix:
        macosSwift50:
          imageName: 'macOS-10.14'
          DEVELOPER_DIR: '/Applications/Xcode_10.3.app'
        macosSwift51:
          imageName: 'macOS-10.15'
          DEVELOPER_DIR: '/Applications/Xcode_11.3.1.app'
        macosSwift52:
          imageName: 'macOS-10.15'
          DEVELOPER_DIR: '/Applications/Xcode_11.4.app'
    pool:
      vmImage: $(imageName)
    steps:
    - script: swift build
      displayName: 'Build'
    - script: swift test --filter BitByteDataTests
      displayName: 'Test'
    - script: swift build -c release # Check Release build just in case.
      displayName: 'Build Release'
  - job: linux
    strategy:
      matrix:
        linuxSwift50:
          imageName: 'ubuntu-18.04'
          SWIFT_VERSION: '5.0'
        linuxSwift51:
          imageName: 'ubuntu-18.04'
          SWIFT_VERSION: '5.1'
        linuxSwift52:
          imageName: 'ubuntu-18.04'
          SWIFT_VERSION: '5.2'
    pool:
      vmImage: $(imageName)
    steps:
    - script: eval "$(curl -sL https://swiftenv.fuller.li/install.sh)"
      displayName: 'Install Swift'
    - script: swift build
      displayName: 'Build'
    - script: swift test --filter BitByteDataTests
      displayName: 'Test'
    - script: swift build -c release # Check Release build just in case.
      displayName: 'Build Release'
- stage: benchmark
  displayName: 'Benchmark'
  dependsOn: test
  condition: not(startsWith(variables['Build.SourceBranch'], 'refs/tags')) # Don't benchmark on tags
  jobs:
  - job: macos
    strategy:
      matrix:
        macosSwift50:
          imageName: 'macOS-10.14'
          DEVELOPER_DIR: '/Applications/Xcode_10.3.app'
        macosSwift51:
          imageName: 'macOS-10.15'
          DEVELOPER_DIR: '/Applications/Xcode_11.3.1.app'
        macosSwift52:
          imageName: 'macOS-10.15'
          DEVELOPER_DIR: '/Applications/Xcode_11.4.app'
    pool:
      vmImage: $(imageName)
    steps:
    - script: ./benchmarks.py run
      displayName: 'Run Benchmarks'
  - job: linux
    strategy:
      matrix:
        linuxSwift50:
          imageName: 'ubuntu-18.04'
          SWIFT_VERSION: '5.0'
        linuxSwift51:
          imageName: 'ubuntu-18.04'
          SWIFT_VERSION: '5.1'
        linuxSwift52:
          imageName: 'ubuntu-18.04'
          SWIFT_VERSION: '5.2'
    pool:
      vmImage: $(imageName)
    steps:
    - script: eval "$(curl -sL https://swiftenv.fuller.li/install.sh)"
      displayName: 'Install Swift'
    - script: ./benchmarks.py run
      displayName: 'Run Benchmarks'
# - stage: Deploy
#   dependsOn: Test
#   condition: startsWith(variables['Build.SourceBranch'], 'refs/tags') # Deploy on tags only
